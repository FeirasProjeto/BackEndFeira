// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid()) @db.VarChar(36)
  createdAt  DateTime    @default(now())
  nome       String
  email      String
  senha      String
  imagem     String?
  bloqueado  Boolean     @default(false)
  token      String?
  tentativas Int         @default(0)
  telefone   String?
  feirante   Boolean     @default(false)
  feiras     Feira[]
  favoritos  Favorito[]
  Avaliacoes Avaliacao[]

  @@map("users")
}

model Favorito {
  id      String @id @default(uuid()) @db.VarChar(36)
  userId  String
  feiraId String
  feira   Feira  @relation(fields: [feiraId], references: [id])
  user    User   @relation(fields: [userId], references: [id])

  @@map("favoritos")
}

model Feira {
  id            String           @id @default(uuid()) @db.VarChar(36)
  createdAt     DateTime         @default(now())
  deleted       Boolean          @default(false)
  nome          String
  endereco      String
  numero        String
  cidade        String
  coordenada    String //-26.308418, -55.130870
  horarioInicio String           @default("00:00")
  horarioFim    String           @default("00:00")
  turno         String           @default("NÃ£o informado")
  data          DateTime?
  descricao     String?
  imagem        String?          @default("https://i.imgur.com/4Y0v1xk.png") @db.Text
  avaliacao     Float?           @default(0)
  tags          FeiraTag[]
  user          User             @relation(fields: [userId], references: [id])
  userId        String
  favoritos     Favorito[]
  diaSemana     DiaSemanaFeira[]
  Avaliacoes    Avaliacao[]
  categoria     CategoriaFeira[]
}

model DiaSemana {
  id     String           @id @default(uuid()) @db.VarChar(36)
  nome   String
  feiras DiaSemanaFeira[]

  @@map("diaSemana")
}

model DiaSemanaFeira {
  diaSemanaId String
  feiraId     String
  feira       Feira     @relation(fields: [feiraId], references: [id])
  diaSemana   DiaSemana @relation(fields: [diaSemanaId], references: [id])

  @@id([diaSemanaId, feiraId])
  @@map("diaSemanaFeira")
}

model Tag {
  id        Int        @id @default(autoincrement())
  nome      String
  feiras    FeiraTag[]
  categoria String
}

model FeiraTag {
  tagId   Int
  feiraId String
  tag     Tag    @relation(fields: [tagId], references: [id])
  feira   Feira  @relation(fields: [feiraId], references: [id])

  @@id([tagId, feiraId])
  @@map("feiraTag")
}

model Avaliacao {
  id         String   @id @default(uuid()) @db.VarChar(36)
  createdAt  DateTime @default(now())
  nota       Int
  comentario String?  @db.VarChar(400)
  feiraId    String
  feira      Feira    @relation(fields: [feiraId], references: [id])
  userId     String
  user       User     @relation(fields: [userId], references: [id])

  @@map("avaliacoes")
}

model Categoria {
  id     Int              @id @default(autoincrement())
  nome   String
  cor    String
  feiras CategoriaFeira[]

  @@map("categorias")
}

model CategoriaFeira {
  categoriaId Int
  feiraId     String
  feira       Feira     @relation(fields: [feiraId], references: [id])
  categoria   Categoria @relation(fields: [categoriaId], references: [id])

  @@id([categoriaId, feiraId])
  @@map("categoriaFeira")
}
